# -*- fill-column: 72; -*-
#+title: Emacs initialisation
#+startup: overview

* Package management

#+begin_src emacs-lisp
  (require 'package)

  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)
#+end_src

The library [[https://github.com/jwiegley/use-package][=use-package=]] provides a convenient way to configure other
packages. See, e.g.,
https://ianyepan.github.io/posts/setting-up-use-package/. The option
~use-package-always-ensure~ means that packages that are required but
not installed will be downloaded and installed automatically.

#+begin_src emacs-lisp
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)
#+end_src 


* Environment

#+begin_src emacs-lisp
  (use-package exec-path-from-shell
    :config 
    (exec-path-from-shell-initialize))
#+end_src


* Whoami

#+begin_src emacs-lisp
  (setq user-mail-address "jgeddes@turing.ac.uk")
#+end_src


* Look and feel

** MacOS modifier keys

#+begin_src emacs-lisp
  (setq ns-alternate-modifier 'none)
  (setq ns-command-modifier 'meta)
#+end_src

** Movement and editing

#+begin_src emacs-lisp
  ;; Typing deletes selection
  (delete-selection-mode 1)
  ;; M-` moves between frames
  (global-set-key (kbd "M-`") 'next-multiframe-window) 
#+end_src

** Typography

#+begin_src emacs-lisp
  (setq-default left-margin-width 1 right-margin-width 1)

  (setq default-frame-alist
        '((left-fringe . 16)
          (right-fringe . 16)
          (width . 102)
          (height . 50)))

  (tool-bar-mode -1)

  (setq fill-column 102)
  (setq frame-background-mode 'dark)
  (setq fringe-mode '(nil . 0))

  (setq-default line-spacing 0.2)

  (setq truncate-string-ellipsis "…")
#+end_src

** Custom themes

#+begin_src emacs-lisp
  (use-package color-theme-sanityinc-solarized)
  (load-theme 'sanityinc-solarized-light t)
#+end_src




* Org mode

#+begin_src emacs-lisp
  ;; Enable orgtbl-mode minor mode
  (require 'org-table)

  ;; Turn on syntax highlighting in src blocks
  (setq org-src-fontify-natively t)  
#+end_src

Org-babel support for various languages. See
https://orgmode.org/worg/org-contrib/babel/languages/index.html for
customisation for each supported language.
#+begin_src emacs-lisp
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((python . t)))

  ;; See code evaluation and security issues in the org manual
  (setq org-confirm-babel-evaluate nil)
#+end_src


** LaTeX export configuration


Use the minted package for syntax highlighting in LaTeX. There seem to
be some indicates that engraved will eventually supercede this.
#+begin_src emacs-lisp
  (require 'ox-latex)
  (setq org-latex-listings 'minted)
  (add-to-list 'org-latex-packages-alist '("newfloat" "minted"))
  (setq org-latex-pdf-process
	'("latexmk -f -shell-escape -pdf -%latex -interaction=nonstopmode -output-directory=%o %f"))
#+end_src

* Programming language support

** Git

#+begin_src emacs-lisp
  (use-package magit)
#+end_src

** Assembly

ARM assembly uses the “@” character as a comment.
#+begin_src emacs-lisp
  (setq asm-comment-char 64)
#+end_src

** Polymode

#+begin_src emacs-lisp
  (use-package polymode)
  (use-package poly-markdown)
  (use-package poly-org)
#+end_src

** R

#+begin_src emacs-lisp
  (use-package ess)
#+end_src

#+begin_src emacs-lisp
  (use-package quarto-mode)
  (use-package request)
#+end_src

** Lisp

#+begin_src emacs-lisp
  (use-package paredit
    :hook (emacs-lisp-mode lisp-mode scheme-mode))
#+end_src

Company provides structured editing support for lisps. 
#+begin_src emacs-lisp
  (use-package company
    :hook prog-mode)
#+end_src

** Python

#+begin_src emacs-lisp
  (setq org-babel-python-command "python3")
#+end_src


* Text modes

#+begin_src emacs-lisp
  (add-hook 'text-mode-hook 'auto-fill-mode)
  
  (setq ispell-dictionary "british")
  (setq ispell-program-name "aspell")
#+end_src

#+begin_src emacs-lisp
  (use-package markdown-mode)
#+end_src


